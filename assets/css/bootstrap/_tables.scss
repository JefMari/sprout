//
// Tables
// --------------------------------------------------


table {
  background-color: $table-bg;
}
caption {
  padding-top: $table-cell-padding-y;
  padding-bottom: $table-cell-padding-y;
  color: $text-muted;
  text-align: left;
}
th {
  text-align: left;
}


// Baseline styles

.table {
  width: 100%;
  max-width: 100%;
  margin-bottom: $line-height-computed;

  th,
  td {
    padding: $table-cell-padding-y $table-cell-padding-x;
    vertical-align: top;
    border-top: 1px solid $table-border-color;

    &:first-child {
      padding-left: $table-cell-padding-x * 2;
    }

    &:last-child {
      padding-right: $table-cell-padding-x * 2;
    }

  }

  // // Cells
  // > thead,
  // > tbody,
  // > tfoot {
  //   > tr {
  //     > th,
  //     > td {
  //       padding: $table-cell-padding-x $table-cell-padding-x;
  //       line-height: $line-height-base;
  //       vertical-align: top;
  //       border-top: 1px solid $table-border;
  //     }
  //   }
  // }

  // Bottom align for column headings
  th {
    vertical-align: bottom;
    border-bottom: 2px solid $table-border-color;

    font-size: $font-size-sm;
    text-transform: uppercase;
    white-space: nowrap;
    line-height: $line-height-sm;
    color: $text-muted;

    // padding-top: $table-cell-padding-sm-y;
    // padding-bottom: $table-cell-padding-sm-y;

  }
  // Remove top border from thead by default
  > caption + thead,
  > colgroup + thead,
  > thead:first-child {
    > tr:first-child {
      > th,
      > td {
        border-top: 0;
      }
    }
  }

  // Account for multiple tbody instances
  tbody + tbody {
    border-top: 2px solid $table-border-color;
  }

  // Nesting
  .table {
    background-color: $body-bg;
  }
}


// Condensed table w/ half padding

.table-sm {
  td {
    padding-top: $table-cell-padding-sm-y;
    padding-bottom: $table-cell-padding-sm-y;
  }
}

.table-lg {
  td {
    padding-top: $table-cell-padding-lg-y;
    padding-bottom: $table-cell-padding-lg-y;
  }
}

// Bordered version
//
// Add borders all around the table and between all the columns.

.table-bordered {
  border: 1px solid $table-border-color;

  th,
  td {
    border: 1px solid $table-border-color;

    padding-left: $table-cell-padding-x * 2;
    padding-right: $table-cell-padding-x * 2;
  }

  thead {
    th,
    td {
      border-bottom-width: 2px;
    }
  }
}

// Zebra-striping
//
// Default zebra-stripe styles (alternating gray and transparent backgrounds)

.table-striped {
  tbody tr:nth-of-type(odd) {
    background-color: $table-accent-bg;
  }
}

// Hover effect
//
// Placed here since it has to come after the potential zebra striping

.table-hover {
  tbody tr:hover {
    background-color: $table-hover-bg;
  }
}


// Table cell sizing
//
// Reset default table behavior

table col[class*="col-"] {
  position: static; // Prevent border hiding in Firefox and IE9-11 (see https://github.com/twbs/bootstrap/issues/11623)
  float: none;
  display: table-column;
}
table {
  td,
  th {
    &[class*="col-"] {
      position: static; // Prevent border hiding in Firefox and IE9-11 (see https://github.com/twbs/bootstrap/issues/11623)
      float: none;
      display: table-cell;
    }
  }
}


// Table backgrounds
//
// Exact selectors below required to override `.table-striped` and prevent
// inheritance to nested tables.

// Generate the contextual variants
@include table-row-variant('table-active', $table-active-bg);
@include table-row-variant('table-success', $table-success-bg);
@include table-row-variant('table-info', $table-info-bg);
@include table-row-variant('table-warning', $table-warning-bg);
@include table-row-variant('table-danger', $table-danger-bg);



// Inverse styles
//
// Same table markup, but inverted color scheme: dark background and light text.

.thead-inverse {
  th {
    color: $thead-inverse-color;
    background-color: $thead-inverse-bg;
    border-bottom: 2px solid $thead-inverse-border-color;
  }
}

// .thead-default {
//   th {
//     color: $table-head-color;
//     background-color: $table-head-bg;
//   }
// }

.table-inverse {
  color: $table-inverse-color;
  background-color: $table-inverse-bg;

  th,
  td,
  thead th {
    border-color: $body-bg;
  }

  &.table-bordered {
    border: 0;
  }
}




// Responsive tables
//
// Wrap your tables in `.table-responsive` and we'll make them mobile friendly
// by enabling horizontal scrolling. Only applies <768px. Everything above that
// will display normally.

.table-responsive {
  overflow-x: auto;
  min-height: 0.01%; // Workaround for IE9 bug (see https://github.com/twbs/bootstrap/issues/14837)

  @media screen and (max-width: $screen-xs-max) {
    width: 100%;
    margin-bottom: ($line-height-computed * 0.75);
    overflow-y: hidden;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    border: 1px solid $table-border-color;

    // Tighten up spacing
    > .table {
      margin-bottom: 0;

      // Ensure the content doesn't wrap
      > thead,
      > tbody,
      > tfoot {
        > tr {
          > th,
          > td {
            white-space: nowrap;
          }
        }
      }
    }

    // Special overrides for the bordered tables
    > .table-bordered {
      border: 0;

      // Nuke the appropriate borders so that the parent can handle them
      > thead,
      > tbody,
      > tfoot {
        > tr {
          > th:first-child,
          > td:first-child {
            border-left: 0;
          }
          > th:last-child,
          > td:last-child {
            border-right: 0;
          }
        }
      }

      // Only nuke the last row's bottom-border in `tbody` and `tfoot` since
      // chances are there will be only one `tr` in a `thead` and that would
      // remove the border altogether.
      > tbody,
      > tfoot {
        > tr:last-child {
          > th,
          > td {
            border-bottom: 0;
          }
        }
      }

    }
  }
}
